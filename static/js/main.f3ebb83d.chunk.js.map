{"version":3,"sources":["components/Button.js","components/Start.js","components/GameOver.js","components/Quiz.js","images/trans.png","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Intro","div","btnCSS","css","Start","props","to","target","href","download","className","onClick","Title","h1","Points","p","GameOver","pts","num","quizes","useState","showAnws","setShowAns","window","location","reload","map","item","index","question","answer","QuizWindow","Options","Option","Question","Quiz","quiz","setQuiz","number","setNumber","setPts","pickAnswer","e","userAnswer","outerText","console","log","toUpperCase","useEffect","myData","dangerouslySetInnerHTML","__html","options","length","App","start","setStart","src","clementine","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3ebb83d.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\nexport const Button = styled.button`\r\n    border: 1px solid #616A94;\r\n    border-radius: 50px;\r\n    padding: 15px 30px;\r\n    text-decoration: none;\r\n    color: #616A94;\r\n    background-color: #161A31;\r\n    transition: 0.3s;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    &:hover {\r\n        color: white;\r\n        background-color: #616A94;\r\n    }\r\n`;\r\n\r\nexport default Button\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components/macro\";\r\nimport Button from \"./Button\";\r\n\r\nconst Intro = styled.div`\r\n  margin-top: 5em;\r\n  text-align: center;\r\n`;\r\n\r\nconst btnCSS = css``;\r\n\r\n\r\nconst Start = ({ props }) => {\r\n  const startQuiz = () => props(true);\r\n\r\n  return (\r\n    <Intro>\r\n      <h2>Want to read the AMA?</h2>\r\n      <Link to=\"https://drive.google.com/uc?id=10RQNb0ZGf7aQ1Ho4ZGJ84MddfdTceFD9&export=download\" target=\"_blank\" href={() => false} download className=\"downbtn\">\r\n        Download\r\n      </Link>\r\n      <h1>OR</h1>\r\n      <h2 className=\"mar\">Take the quiz.</h2>\r\n      {/* <h4>Whenever, you want.</h4> */}\r\n      <Button onClick={startQuiz} css={btnCSS}>\r\n        Begin\r\n      </Button>\r\n    </Intro>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport { Button } from './Button'\r\n\r\nconst Title = styled.h1`\r\n    margin-top: 4em;\r\n    font-size: 48px;\r\n`;\r\n\r\nconst Points = styled.p`\r\n    font-size: 24px;\r\n    margin-bottom: 3em;\r\n`;\r\n\r\nconst GameOver = ({ pts, num, quizes }) => {\r\n    const [showAnws, setShowAns] = useState(false);\r\n    const refreshPage = () => window.location.reload();\r\n\r\n    return (\r\n        <>\r\n            <Title>Congratz <br></br> ðŸŽ‰ðŸŽŠðŸŽ‰</Title>\r\n            <h2 className='tttll'>Quiz is Over </h2>\r\n            <Points>Your score is {pts}/{num}!</Points>\r\n            <div className='butns'>\r\n                <Button onClick={refreshPage}>Retry</Button>\r\n                <Button onClick={() => setShowAns(true)}>Show all answers</Button>\r\n            </div>\r\n            {showAnws && <div className='answersList'>\r\n                {\r\n                    quizes.map((item, index) => <div key={index}>\r\n                        <h2>{item.question}</h2>\r\n                        <p>{item.answer}</p>\r\n                    </div>)\r\n                }\r\n            </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameOver\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GameOver from \"./GameOver\";\r\nimport myData from '../data/quizes.json';\r\n\r\nconst QuizWindow = styled.div`\r\n  text-align: center;\r\n  font-size: clamp(20px, 2.5vw, 24px);\r\n  margin-top: 5em;\r\n`;\r\n\r\nconst Options = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 70%;\r\n  margin: 2em auto;\r\n\r\n  @media screen and (min-width: 1180px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Option = styled.button`\r\n  display: block;\r\n  border: 1px solid #616a94;\r\n  border-radius: 15px;\r\n  padding: 15px 30px;\r\n  text-decoration: none;\r\n  color: #616a94;\r\n  background-color: #161a31;\r\n  transition: 0.3s;\r\n  font-size: 1em;\r\n  outline: none;\r\n  user-select: none;\r\n  margin-top: 1em;\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 1180px) {\r\n    &:hover {\r\n      color: white;\r\n      background-color: #616a94;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Question = styled.div`\r\n  width: 70%;\r\n  margin: 0 auto;\r\n  font-family:  LOswald-VariableFont_wght\r\n`;\r\n\r\nconst Quiz = () => {\r\n  const [quiz, setQuiz] = useState([]);\r\n  const [number, setNumber] = useState(0);\r\n  const [pts, setPts] = useState(0);\r\n\r\n\r\n  const pickAnswer = (e) => {\r\n    let userAnswer = e.target.outerText;\r\n    console.log(userAnswer);\r\n    if (quiz[number].answer.toUpperCase() === userAnswer) setPts(pts + 1);\r\n    setNumber(number + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setQuiz(myData)\r\n  }, []);\r\n\r\n  return (\r\n    <QuizWindow>\r\n      {quiz[number] && (\r\n        <>\r\n          <Question\r\n            dangerouslySetInnerHTML={{ __html: quiz[number].question }}\r\n          ></Question>\r\n\r\n          <Options>\r\n            {quiz[number].options.map((item, index) => (\r\n              <Option\r\n                key={index}\r\n                dangerouslySetInnerHTML={{ __html: item }}\r\n                onClick={pickAnswer}\r\n              ></Option>\r\n            ))}\r\n          </Options>\r\n        </>\r\n      )}\r\n      {number === quiz.length && <GameOver num={quiz.length} pts={pts} quizes={quiz}  />}\r\n    </QuizWindow>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","export default __webpack_public_path__ + \"static/media/trans.b6cd5f42.png\";","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Start from \"./components/Start\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport clementine from \"./images/trans.png\";\r\n\r\nfunction App() {\r\n  const [start, setStart] = useState(false);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"quiz\">\r\n        {start ? <Quiz /> : <Start props={setStart} />}\r\n      </div>\r\n      <img className=\"img-trans\" src={clementine} alt=\"clementside\" />\r\n\r\n      <div className=\"footer\">\r\n        <p>\r\n          {\" \"}\r\n          â—‹ Developed by <strong>CharithaGG</strong>{\" \"}\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          â—‹ Previous fan art - <strong>\r\n            <a className=\"prefan\" target=\"_blank\" href=\"https://twitter.com/charithaGG/status/1484043131926749190\">here</a>\r\n            \r\n          </strong>{\" \"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}