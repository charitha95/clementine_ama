{"version":3,"sources":["components/Button.js","components/Start.js","components/GameOver.js","components/Quiz.js","images/trans.png","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Intro","div","btnCSS","css","Start","props","className","onClick","Title","h1","Points","p","GameOver","pts","window","location","reload","QuizWindow","Options","Option","Question","Quiz","useState","quiz","setQuiz","number","setNumber","setPts","pickAnswer","e","userAnswer","target","outerText","answer","useEffect","axios","get","then","res","data","results","map","item","question","options","arr","incorrect_answers","correct_answer","sort","Math","random","catch","err","console","error","dangerouslySetInnerHTML","__html","index","App","start","setStart","src","clementine","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAGaA,EAASC,IAAOC,OAAV,yWAkBJF,I,OChBTG,EAAQF,IAAOG,IAAV,mEAAGH,CAAH,uCAKLI,EAASC,YAAH,0B,qGAe2BD,GAOxBE,EAnBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGf,OACE,eAACL,EAAD,WACE,uDAIA,oCACA,oBAAIM,UAAU,MAAd,4BAEA,iBAAQC,QAXM,kBAAMF,GAAM,IAW1B,uB,yBCtBAG,EAAQV,IAAOW,GAAV,wEAKLC,EAASZ,IAAOa,EAAV,2EAkBGC,EAbE,SAAC,GAAW,IAAVC,EAAS,EAATA,IAIf,OACI,qCACI,cAACL,EAAD,wBACA,eAACE,EAAD,sBAAiBG,EAAjB,gBACA,cAAChB,EAAD,CAAQU,QANI,kBAAMO,OAAOC,SAASC,UAMlC,uBChBNC,EAAanB,IAAOG,IAAV,+GAMViB,EAAUpB,IAAOG,IAAV,gLAWPkB,EAASrB,IAAOC,OAAV,8bAuBNqB,EAAWtB,IAAOG,IAAV,yGA6DCoB,EAvDF,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEWF,mBAAS,GAFpB,mBAEVG,EAFU,KAEFC,EAFE,OAGKJ,mBAAS,GAHd,mBAGVT,EAHU,KAGLc,EAHK,KAOXC,EAAa,SAACC,GAClB,IAAIC,EAAaD,EAAEE,OAAOC,UAEtBT,EAAKE,GAAQQ,SAAWH,GAAYH,EAAOd,EAAM,GACrDa,EAAUD,EAAS,IAoBrB,OAjBAS,qBAAU,WACRC,IACGC,IACC,oEAEDC,MAAK,SAACC,GACLd,EACEc,EAAIC,KAAKC,QAAQC,KAAI,SAACC,GAAD,MAAW,CAC9BC,SAAUD,EAAKC,SACfC,SAlBOC,EAkBU,GAAD,mBAAKH,EAAKI,mBAAV,CAA6BJ,EAAKK,iBAlBnCF,EAAIG,MAAK,kBAAMC,KAAKC,SAAW,OAmB9CjB,OAAQS,EAAKK,gBAnBP,IAACF,SAuBZM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,QAC/B,IAGD,eAACnC,EAAD,WACGM,EAAKE,IACJ,qCACE,cAACL,EAAD,CACEmC,wBAAyB,CAAEC,OAAQjC,EAAKE,GAAQkB,YAGlD,cAACzB,EAAD,UACGK,EAAKE,GAAQmB,QAAQH,KAAI,SAACC,EAAMe,GAAP,OACxB,cAACtC,EAAD,CAEEoC,wBAAyB,CAAEC,OAAQd,GACnCnC,QAASqB,GAFJ6B,WAQH,IAAXhC,GAAgB,cAAC,EAAD,CAAUZ,IAAKA,QCrGvB,MAA0B,kCC8B1B6C,MAxBf,WAAgB,IAAD,EACapC,oBAAS,GADtB,mBACNqC,EADM,KACCC,EADD,KAGb,OACE,sBAAKtD,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,SACGqD,EAAQ,cAAC,EAAD,IAAW,cAAC,EAAD,CAAOtD,MAAOuD,MAEpC,qBAAKtD,UAAU,YAAYuD,IAAKC,EAAYC,IAAI,gBAEhD,sBAAKzD,UAAU,SAAf,UACE,8BACG,IADH,uBAEiB,gDAA4B,OAE7C,8BACG,IADH,6BAEuB,0CAAsB,cCXtC0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ebd29f25.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const Button = styled.button`\n    border: 1px solid #616A94;\n    border-radius: 50px;\n    padding: 15px 30px;\n    text-decoration: none;\n    color: #616A94;\n    background-color: #161A31;\n    transition: 0.3s;\n    font-size: 1em;\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        color: white;\n        background-color: #616A94;\n    }\n`;\n\nexport default Button\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport styled, { css } from \"styled-components/macro\";\nimport Button from \"./Button\";\n\nconst Intro = styled.div`\n  margin-top: 5em;\n  text-align: center;\n`;\n\nconst btnCSS = css``;\n\n\nconst Start = ({ props }) => {\n  const startQuiz = () => props(true);\n\n  return (\n    <Intro>\n      <h2>Want to read the AMA?</h2>\n      {/* <Link to=\"/files/ama.pdf\" target=\"_blank\" href={() => false} download className=\"downbtn\">\n        Download\n      </Link> */}\n      <h1>OR</h1>\n      <h2 className=\"mar\">Take the quiz.</h2>\n      {/* <h4>Whenever, you want.</h4> */}\n      <Button onClick={startQuiz} css={btnCSS}>\n        Begin\n      </Button>\n    </Intro>\n  );\n};\n\nexport default Start;\n","import styled from 'styled-components'\nimport {Button} from './Button'\n\nconst Title = styled.h1`\n    margin-top: 4em;\n    font-size: 48px;\n`;\n\nconst Points = styled.p`\n    font-size: 24px;\n    margin-bottom: 3em;\n`;\n\nconst GameOver = ({pts}) => {\n\n    const refreshPage = () => window.location.reload();\n\n    return (\n        <>\n            <Title>Game Over</Title>\n            <Points>You did {pts} out of 5!</Points>\n            <Button onClick={refreshPage}>Retry</Button>\n        </>\n    )\n}\n\nexport default GameOver\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport GameOver from \"./GameOver\";\n\nconst QuizWindow = styled.div`\n  text-align: center;\n  font-size: clamp(20px, 2.5vw, 24px);\n  margin-top: 5em;\n`;\n\nconst Options = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  margin: 2em auto;\n\n  @media screen and (min-width: 1180px) {\n    width: 50%;\n  }\n`;\n\nconst Option = styled.button`\n  display: block;\n  border: 1px solid #616a94;\n  border-radius: 15px;\n  padding: 15px 30px;\n  text-decoration: none;\n  color: #616a94;\n  background-color: #161a31;\n  transition: 0.3s;\n  font-size: 1em;\n  outline: none;\n  user-select: none;\n  margin-top: 1em;\n  cursor: pointer;\n\n  @media screen and (min-width: 1180px) {\n    &:hover {\n      color: white;\n      background-color: #616a94;\n    }\n  }\n`;\n\nconst Question = styled.div`\n  width: 70%;\n  margin: 0 auto;\n  font-family:  LOswald-VariableFont_wght\n`;\n\nconst Quiz = () => {\n  const [quiz, setQuiz] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [pts, setPts] = useState(0);\n\n  const shuffle = (arr) => arr.sort(() => Math.random() - 0.5);\n\n  const pickAnswer = (e) => {\n    let userAnswer = e.target.outerText;\n\n    if (quiz[number].answer === userAnswer) setPts(pts + 1);\n    setNumber(number + 1);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy\"\n      )\n      .then((res) => {\n        setQuiz(\n          res.data.results.map((item) => ({\n            question: item.question,\n            options: shuffle([...item.incorrect_answers, item.correct_answer]),\n            answer: item.correct_answer,\n          }))\n        );\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <QuizWindow>\n      {quiz[number] && (\n        <>\n          <Question\n            dangerouslySetInnerHTML={{ __html: quiz[number].question }}\n          ></Question>\n\n          <Options>\n            {quiz[number].options.map((item, index) => (\n              <Option\n                key={index}\n                dangerouslySetInnerHTML={{ __html: item }}\n                onClick={pickAnswer}\n              ></Option>\n            ))}\n          </Options>\n        </>\n      )}\n      {number === 5 && <GameOver pts={pts} />}\n    </QuizWindow>\n  );\n};\n\nexport default Quiz;\n","export default __webpack_public_path__ + \"static/media/trans.b6cd5f42.png\";","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Start from \"./components/Start\";\nimport Quiz from \"./components/Quiz\";\nimport clementine from \"./images/trans.png\";\n\nfunction App() {\n  const [start, setStart] = useState(false);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"quiz\">\n        {start ? <Quiz /> : <Start props={setStart} />}\n      </div>\n      <img className=\"img-trans\" src={clementine} alt=\"clementside\" />\n\n      <div className=\"footer\">\n        <p>\n          {\" \"}\n          ○ Developed by <strong>CharithaGG</strong>{\" \"}\n        </p>\n        <p>\n          {\" \"}\n          ○ Previous fan art - <strong>here</strong>{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}